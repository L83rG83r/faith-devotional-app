<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:w="urn:schemas-microsoft-com:office:word"
xmlns:m="http://schemas.microsoft.com/office/2004/12/omml"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=Word.Document>
<meta name=Generator content="Microsoft Word 15">
<meta name=Originator content="Microsoft Word 15">
<link rel=File-List href="index_files/filelist.xml">
<!--[if gte mso 9]><xml>
 <o:DocumentProperties>
  <o:Author>Bobby Harris</o:Author>
  <o:Template>Normal</o:Template>
  <o:LastAuthor>Bobby Harris</o:LastAuthor>
  <o:Revision>1</o:Revision>
  <o:TotalTime>2</o:TotalTime>
  <o:Created>2025-09-26T02:09:00Z</o:Created>
  <o:LastSaved>2025-09-26T02:11:00Z</o:LastSaved>
  <o:Pages>41</o:Pages>
  <o:Words>7249</o:Words>
  <o:Characters>41324</o:Characters>
  <o:Company>DoD</o:Company>
  <o:Lines>344</o:Lines>
  <o:Paragraphs>96</o:Paragraphs>
  <o:CharactersWithSpaces>48477</o:CharactersWithSpaces>
  <o:Version>16.00</o:Version>
 </o:DocumentProperties>
 <o:OfficeDocumentSettings>
  <o:AllowPNG/>
 </o:OfficeDocumentSettings>
</xml><![endif]-->
<link rel=themeData href="index_files/themedata.thmx">
<link rel=colorSchemeMapping href="index_files/colorschememapping.xml">
<!--[if gte mso 9]><xml>
 <w:WordDocument>
  <w:SpellingState>Clean</w:SpellingState>
  <w:GrammarState>Clean</w:GrammarState>
  <w:TrackMoves>false</w:TrackMoves>
  <w:TrackFormatting/>
  <w:PunctuationKerning/>
  <w:ValidateAgainstSchemas/>
  <w:SaveIfXMLInvalid>false</w:SaveIfXMLInvalid>
  <w:IgnoreMixedContent>false</w:IgnoreMixedContent>
  <w:AlwaysShowPlaceholderText>false</w:AlwaysShowPlaceholderText>
  <w:DoNotPromoteQF/>
  <w:LidThemeOther>EN-US</w:LidThemeOther>
  <w:LidThemeAsian>X-NONE</w:LidThemeAsian>
  <w:LidThemeComplexScript>X-NONE</w:LidThemeComplexScript>
  <w:Compatibility>
   <w:BreakWrappedTables/>
   <w:SnapToGridInCell/>
   <w:WrapTextWithPunct/>
   <w:UseAsianBreakRules/>
   <w:UseWord2010TableStyleRules/>
   <w:DontGrowAutofit/>
   <w:SplitPgBreakAndParaMark/>
  </w:Compatibility>
  <m:mathPr>
   <m:mathFont m:val="Cambria Math"/>
   <m:brkBin m:val="before"/>
   <m:brkBinSub m:val="&#45;-"/>
   <m:smallFrac m:val="off"/>
   <m:dispDef/>
   <m:lMargin m:val="0"/>
   <m:rMargin m:val="0"/>
   <m:defJc m:val="centerGroup"/>
   <m:wrapIndent m:val="1440"/>
   <m:intLim m:val="subSup"/>
   <m:naryLim m:val="undOvr"/>
  </m:mathPr></w:WordDocument>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <w:LatentStyles DefLockedState="false" DefUnhideWhenUsed="false"
  DefSemiHidden="false" DefQFormat="false" DefPriority="99"
  LatentStyleCount="376">
  <w:LsdException Locked="false" Priority="0" QFormat="true" Name="Normal"/>
  <w:LsdException Locked="false" Priority="9" QFormat="true" Name="heading 1"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 2"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 3"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 4"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 5"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 6"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 7"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 8"/>
  <w:LsdException Locked="false" Priority="9" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="heading 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index 9"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 1"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 2"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 3"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 4"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 5"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 6"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 7"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 8"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" Name="toc 9"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="header"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footer"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="index heading"/>
  <w:LsdException Locked="false" Priority="35" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="caption"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of figures"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="envelope return"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="footnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="line number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="page number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote reference"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="endnote text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="table of authorities"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="macro"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="toa heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Bullet 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Number 5"/>
  <w:LsdException Locked="false" Priority="10" QFormat="true" Name="Title"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Closing"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Signature"/>
  <w:LsdException Locked="false" Priority="1" SemiHidden="true"
   UnhideWhenUsed="true" Name="Default Paragraph Font"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="List Continue 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Message Header"/>
  <w:LsdException Locked="false" Priority="11" QFormat="true" Name="Subtitle"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Salutation"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Date"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text First Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Note Heading"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Body Text Indent 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Block Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="FollowedHyperlink"/>
  <w:LsdException Locked="false" Priority="22" QFormat="true" Name="Strong"/>
  <w:LsdException Locked="false" Priority="20" QFormat="true" Name="Emphasis"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Document Map"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Plain Text"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="E-mail Signature"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Top of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Bottom of Form"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal (Web)"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Acronym"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Address"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Cite"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Code"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Definition"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Keyboard"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Preformatted"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Sample"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Typewriter"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="HTML Variable"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Normal Table"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="annotation subject"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="No List"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Outline List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Simple 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Classic 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Colorful 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Columns 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Grid 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 4"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 5"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 7"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table List 8"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table 3D effects 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Contemporary"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Elegant"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Professional"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Subtle 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 1"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 2"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Web 3"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Balloon Text"/>
  <w:LsdException Locked="false" Priority="39" Name="Table Grid"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Table Theme"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Placeholder Text"/>
  <w:LsdException Locked="false" Priority="1" QFormat="true" Name="No Spacing"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 1"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 1"/>
  <w:LsdException Locked="false" SemiHidden="true" Name="Revision"/>
  <w:LsdException Locked="false" Priority="34" QFormat="true"
   Name="List Paragraph"/>
  <w:LsdException Locked="false" Priority="29" QFormat="true" Name="Quote"/>
  <w:LsdException Locked="false" Priority="30" QFormat="true"
   Name="Intense Quote"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 1"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 1"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 1"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 1"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 1"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 2"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 2"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 2"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 2"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 2"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 2"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 3"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 3"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 3"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 3"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 3"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 3"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 4"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 4"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 4"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 4"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 4"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 4"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 5"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 5"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 5"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 5"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 5"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 5"/>
  <w:LsdException Locked="false" Priority="60" Name="Light Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="61" Name="Light List Accent 6"/>
  <w:LsdException Locked="false" Priority="62" Name="Light Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="63" Name="Medium Shading 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="64" Name="Medium Shading 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="65" Name="Medium List 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="66" Name="Medium List 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="67" Name="Medium Grid 1 Accent 6"/>
  <w:LsdException Locked="false" Priority="68" Name="Medium Grid 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="69" Name="Medium Grid 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="70" Name="Dark List Accent 6"/>
  <w:LsdException Locked="false" Priority="71" Name="Colorful Shading Accent 6"/>
  <w:LsdException Locked="false" Priority="72" Name="Colorful List Accent 6"/>
  <w:LsdException Locked="false" Priority="73" Name="Colorful Grid Accent 6"/>
  <w:LsdException Locked="false" Priority="19" QFormat="true"
   Name="Subtle Emphasis"/>
  <w:LsdException Locked="false" Priority="21" QFormat="true"
   Name="Intense Emphasis"/>
  <w:LsdException Locked="false" Priority="31" QFormat="true"
   Name="Subtle Reference"/>
  <w:LsdException Locked="false" Priority="32" QFormat="true"
   Name="Intense Reference"/>
  <w:LsdException Locked="false" Priority="33" QFormat="true" Name="Book Title"/>
  <w:LsdException Locked="false" Priority="37" SemiHidden="true"
   UnhideWhenUsed="true" Name="Bibliography"/>
  <w:LsdException Locked="false" Priority="39" SemiHidden="true"
   UnhideWhenUsed="true" QFormat="true" Name="TOC Heading"/>
  <w:LsdException Locked="false" Priority="41" Name="Plain Table 1"/>
  <w:LsdException Locked="false" Priority="42" Name="Plain Table 2"/>
  <w:LsdException Locked="false" Priority="43" Name="Plain Table 3"/>
  <w:LsdException Locked="false" Priority="44" Name="Plain Table 4"/>
  <w:LsdException Locked="false" Priority="45" Name="Plain Table 5"/>
  <w:LsdException Locked="false" Priority="40" Name="Grid Table Light"/>
  <w:LsdException Locked="false" Priority="46" Name="Grid Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="Grid Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="Grid Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="Grid Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="Grid Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="Grid Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="Grid Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="Grid Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="Grid Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="Grid Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="46" Name="List Table 1 Light"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark"/>
  <w:LsdException Locked="false" Priority="51" Name="List Table 6 Colorful"/>
  <w:LsdException Locked="false" Priority="52" Name="List Table 7 Colorful"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 1"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 1"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 1"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 1"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 1"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 1"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 2"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 2"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 2"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 2"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 2"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 2"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 3"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 3"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 3"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 3"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 3"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 3"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 4"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 4"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 4"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 4"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 4"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 4"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 5"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 5"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 5"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 5"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 5"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 5"/>
  <w:LsdException Locked="false" Priority="46"
   Name="List Table 1 Light Accent 6"/>
  <w:LsdException Locked="false" Priority="47" Name="List Table 2 Accent 6"/>
  <w:LsdException Locked="false" Priority="48" Name="List Table 3 Accent 6"/>
  <w:LsdException Locked="false" Priority="49" Name="List Table 4 Accent 6"/>
  <w:LsdException Locked="false" Priority="50" Name="List Table 5 Dark Accent 6"/>
  <w:LsdException Locked="false" Priority="51"
   Name="List Table 6 Colorful Accent 6"/>
  <w:LsdException Locked="false" Priority="52"
   Name="List Table 7 Colorful Accent 6"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Hyperlink"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Hashtag"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Unresolved Mention"/>
  <w:LsdException Locked="false" SemiHidden="true" UnhideWhenUsed="true"
   Name="Smart Link"/>
 </w:LatentStyles>
</xml><![endif]-->
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;
	mso-font-charset:0;
	mso-generic-font-family:roman;
	mso-font-pitch:variable;
	mso-font-signature:-536869121 1107305727 33554432 0 415 0;}
@font-face
	{font-family:Aptos;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:536871559 3 0 0 415 0;}
@font-face
	{font-family:"Segoe UI Emoji";
	panose-1:2 11 5 2 4 2 4 2 2 3;
	mso-font-charset:0;
	mso-generic-font-family:swiss;
	mso-font-pitch:variable;
	mso-font-signature:3 33554432 134217728 0 1 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-parent:"";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
h1
	{mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Heading 1 Char";
	mso-style-next:Normal;
	margin-top:.25in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:1;
	font-size:20.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	font-weight:normal;}
h2
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 2 Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:2;
	font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	font-weight:normal;}
h3
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 3 Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:3;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	font-weight:normal;}
h4
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 4 Char";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:4;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	font-weight:normal;
	font-style:italic;}
h5
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 5 Char";
	mso-style-next:Normal;
	margin-top:4.0pt;
	margin-right:0in;
	margin-bottom:2.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:5;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	font-weight:normal;}
h6
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 6 Char";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:6;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	mso-font-kerning:1.0pt;
	font-weight:normal;
	font-style:italic;}
p.MsoHeading7, li.MsoHeading7, div.MsoHeading7
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 7 Char";
	mso-style-next:Normal;
	margin-top:2.0pt;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:7;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	mso-font-kerning:1.0pt;}
p.MsoHeading8, li.MsoHeading8, div.MsoHeading8
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 8 Char";
	mso-style-next:Normal;
	margin:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:8;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	mso-font-kerning:1.0pt;
	font-style:italic;}
p.MsoHeading9, li.MsoHeading9, div.MsoHeading9
	{mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-qformat:yes;
	mso-style-link:"Heading 9 Char";
	mso-style-next:Normal;
	margin:0in;
	line-height:115%;
	mso-pagination:widow-orphan lines-together;
	page-break-after:avoid;
	mso-outline-level:9;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	mso-font-kerning:1.0pt;}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Title Char";
	mso-style-next:Normal;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:4.0pt;
	margin-left:0in;
	mso-add-space:auto;
	mso-pagination:widow-orphan;
	font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Subtitle Char";
	mso-style-next:Normal;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:14.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	letter-spacing:.75pt;
	mso-font-kerning:1.0pt;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{mso-style-priority:34;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-type:export-only;
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:.5in;
	mso-add-space:auto;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-font-kerning:1.0pt;}
p.MsoQuote, li.MsoQuote, div.MsoQuote
	{mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Quote Char";
	mso-style-next:Normal;
	margin-top:8.0pt;
	margin-right:0in;
	margin-bottom:8.0pt;
	margin-left:0in;
	text-align:center;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;
	mso-font-kerning:1.0pt;
	font-style:italic;}
p.MsoIntenseQuote, li.MsoIntenseQuote, div.MsoIntenseQuote
	{mso-style-priority:30;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	mso-style-link:"Intense Quote Char";
	mso-style-next:Normal;
	margin-top:.25in;
	margin-right:.6in;
	margin-bottom:.25in;
	margin-left:.6in;
	text-align:center;
	line-height:115%;
	mso-pagination:widow-orphan;
	border:none;
	mso-border-top-alt:solid #0F4761 .5pt;
	mso-border-top-themecolor:accent1;
	mso-border-top-themeshade:191;
	mso-border-bottom-alt:solid #0F4761 .5pt;
	mso-border-bottom-themecolor:accent1;
	mso-border-bottom-themeshade:191;
	padding:0in;
	mso-padding-alt:10.0pt 0in 10.0pt 0in;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	mso-font-kerning:1.0pt;
	font-style:italic;}
span.MsoIntenseEmphasis
	{mso-style-priority:21;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.MsoIntenseReference
	{mso-style-priority:32;
	mso-style-unhide:no;
	mso-style-qformat:yes;
	font-variant:small-caps;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	letter-spacing:.25pt;
	font-weight:bold;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 1";
	mso-ansi-font-size:20.0pt;
	mso-bidi-font-size:20.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 2";
	mso-ansi-font-size:16.0pt;
	mso-bidi-font-size:16.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 3";
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading4Char
	{mso-style-name:"Heading 4 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 4";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
span.Heading5Char
	{mso-style-name:"Heading 5 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 5";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;}
span.Heading6Char
	{mso-style-name:"Heading 6 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 6";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	font-style:italic;}
span.Heading7Char
	{mso-style-name:"Heading 7 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 7";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;}
span.Heading8Char
	{mso-style-name:"Heading 8 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 8";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;
	font-style:italic;}
span.Heading9Char
	{mso-style-name:"Heading 9 Char";
	mso-style-noshow:yes;
	mso-style-priority:9;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Heading 9";
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#272727;
	mso-themecolor:text1;
	mso-themetint:216;}
span.TitleChar
	{mso-style-name:"Title Char";
	mso-style-priority:10;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Title;
	mso-ansi-font-size:28.0pt;
	mso-bidi-font-size:28.0pt;
	font-family:"Aptos Display",sans-serif;
	mso-ascii-font-family:"Aptos Display";
	mso-ascii-theme-font:major-latin;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-hansi-font-family:"Aptos Display";
	mso-hansi-theme-font:major-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	letter-spacing:-.5pt;
	mso-font-kerning:14.0pt;}
span.SubtitleChar
	{mso-style-name:"Subtitle Char";
	mso-style-priority:11;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Subtitle;
	mso-ansi-font-size:14.0pt;
	mso-bidi-font-size:14.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";
	mso-fareast-theme-font:major-fareast;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:major-bidi;
	color:#595959;
	mso-themecolor:text1;
	mso-themetint:166;
	letter-spacing:.75pt;}
span.QuoteChar
	{mso-style-name:"Quote Char";
	mso-style-priority:29;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:Quote;
	color:#404040;
	mso-themecolor:text1;
	mso-themetint:191;
	font-style:italic;}
span.IntenseQuoteChar
	{mso-style-name:"Intense Quote Char";
	mso-style-priority:30;
	mso-style-unhide:no;
	mso-style-locked:yes;
	mso-style-link:"Intense Quote";
	color:#0F4761;
	mso-themecolor:accent1;
	mso-themeshade:191;
	font-style:italic;}
p.msonormal0, li.msonormal0, div.msonormal0
	{mso-style-name:msonormal;
	mso-style-unhide:no;
	mso-margin-top-alt:auto;
	margin-right:0in;
	mso-margin-bottom-alt:auto;
	margin-left:0in;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Times New Roman",serif;
	mso-fareast-font-family:"Times New Roman";}
span.SpellE
	{mso-style-name:"";
	mso-spl-e:yes;}
span.GramE
	{mso-style-name:"";
	mso-gram-e:yes;}
.MsoChpDefault
	{mso-style-type:export-only;
	mso-default-props:yes;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-fareast-font-family:Aptos;
	mso-fareast-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-bidi-font-family:"Times New Roman";
	mso-bidi-theme-font:minor-bidi;
	mso-ligatures:none;}
.MsoPapDefault
	{mso-style-type:export-only;
	margin-bottom:8.0pt;
	line-height:115%;}
@page WordSection1
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;
	mso-header-margin:.5in;
	mso-footer-margin:.5in;
	mso-paper-source:0;}
div.WordSection1
	{page:WordSection1;}
-->
</style>
<!--[if gte mso 10]>
<style>
 /* Style Definitions */
 table.MsoNormalTable
	{mso-style-name:"Table Normal";
	mso-tstyle-rowband-size:0;
	mso-tstyle-colband-size:0;
	mso-style-noshow:yes;
	mso-style-priority:99;
	mso-style-parent:"";
	mso-padding-alt:0in 5.4pt 0in 5.4pt;
	mso-para-margin-top:0in;
	mso-para-margin-right:0in;
	mso-para-margin-bottom:8.0pt;
	mso-para-margin-left:0in;
	line-height:115%;
	mso-pagination:widow-orphan;
	font-size:12.0pt;
	font-family:"Aptos",sans-serif;
	mso-ascii-font-family:Aptos;
	mso-ascii-theme-font:minor-latin;
	mso-hansi-font-family:Aptos;
	mso-hansi-theme-font:minor-latin;
	mso-font-kerning:1.0pt;}
</style>
<![endif]--><!--[if gte mso 9]><xml>
 <o:shapedefaults v:ext="edit" spidmax="1026"/>
</xml><![endif]--><!--[if gte mso 9]><xml>
 <o:shapelayout v:ext="edit">
  <o:idmap v:ext="edit" data="1"/>
 </o:shapelayout></xml><![endif]-->
</head>

<body lang=EN-US style='tab-interval:.5in;word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal>&lt;!DOCTYPE html&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;html lang=&quot;<span class=SpellE>en</span>&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;head&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;meta charset=&quot;UTF-8&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width,
initial-scale=1.0&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;title&gt;Daily Devotional&lt;/title&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script <span class=SpellE>src</span>=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script src=&quot;https://unpkg.com/react@18/umd/react.production.min.js&quot;&gt;&lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script src=&quot;https://unpkg.com/react-dom@18/umd/react-dom.production.min.js&quot;&gt;&lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script <span class=SpellE>src</span>=&quot;https://unpkg.com/@babel/standalone/babel.min.js&quot;&gt;&lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script type=&quot;module&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; import <span class=GramE>{ <span
class=SpellE>initializeApp</span></span> } from &quot;https://www.gstatic.com/firebasejs/11.6.1/firebase-app.js<span
class=GramE>&quot;;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; import <span class=GramE>{ <span
class=SpellE>getAuth</span></span>, <span class=SpellE>signInAnonymously</span>,
<span class=SpellE>signInWithCustomToken</span>, <span class=SpellE><span
class=GramE>onAuthStateChanged</span></span><span class=GramE> }</span> from &quot;https://www.gstatic.com/firebasejs/11.6.1/firebase-auth.js<span
class=GramE>&quot;;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; import <span class=GramE>{ <span
class=SpellE>getFirestore</span></span>, doc, <span class=SpellE>setDoc</span>,
<span class=SpellE>onSnapshot</span>, collection, query, <span class=SpellE>orderBy</span>,
<span class=SpellE><span class=GramE>deleteDoc</span></span><span class=GramE> }</span>
from &quot;https://www.gstatic.com/firebasejs/11.6.1/firebase-firestore.js<span
class=GramE>&quot;;</span><o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE><span
class=GramE>window.firebase</span></span> = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>initializeApp</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>getAuth</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>signInAnonymously</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>signInWithCustomToken</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>onAuthStateChanged</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>getFirestore</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; doc,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setDoc</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>onSnapshot</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; collection,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; query,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>orderBy</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>deleteDoc</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;style&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&amp;display=swap'<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; body {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; font-family: 'Inter',
sans-<span class=GramE>serif;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; transition: background-color
0.5s <span class=GramE>ease;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>.devotional</span>-card
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; min-height: <span
class=GramE>500px;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;/style&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;/head&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;body&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;script type=&quot;text/babel&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=GramE>{ <span
class=SpellE>useState</span></span>, <span class=SpellE><span class=GramE>useEffect</span></span><span
class=GramE> }</span> = <span class=GramE>React;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=GramE>{ <span
class=SpellE>initializeApp</span></span>, <span class=SpellE>getAuth</span>, <span
class=SpellE>signInAnonymously</span>, <span class=SpellE>signInWithCustomToken</span>,
<span class=SpellE>onAuthStateChanged</span>, <span class=SpellE>getFirestore</span>,
doc, <span class=SpellE>setDoc</span>, <span class=SpellE>onSnapshot</span>,
collection, query, <span class=SpellE>orderBy</span>, <span class=SpellE><span
class=GramE>deleteDoc</span></span><span class=GramE> }</span> = <span
class=GramE>firebase;</span><o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>appId</span>
= <span class=SpellE><span class=GramE>typeof</span></span> __<span
class=SpellE>app_<span class=GramE>id</span></span><span class=GramE> !</span>==
'undefined<span class=GramE>' ?</span> __<span class=SpellE>app_<span
class=GramE>id</span></span><span class=GramE> :</span> 'default-app-id<span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>firebaseConfig</span>
= <span class=SpellE>typeof</span> __<span class=SpellE>firebase_<span
class=GramE>config</span></span><span class=GramE> !</span>== 'undefined<span
class=GramE>' ?</span> <span class=SpellE>JSON.parse</span>(__<span
class=SpellE>firebase_config</span><span class=GramE>) :</span> {<span
class=GramE>};</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>initialAuthToken</span>
= <span class=SpellE><span class=GramE>typeof</span></span> __<span
class=SpellE>initial_auth_<span class=GramE>token</span></span><span
class=GramE> !</span>== 'undefined<span class=GramE>' ?</span> __<span
class=SpellE>initial_auth_<span class=GramE>token</span></span><span
class=GramE> :</span> <span class=GramE>null;</span><o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const BIBLE_BOOKS = [<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Genesis', 'Exodus',
'Leviticus', 'Numbers', 'Deuteronomy', 'Joshua', 'Judges', 'Ruth', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '1 Samuel', '2 Samuel',
'1 Kings', '2 Kings', '1 Chronicles', '2 Chronicles', 'Ezra', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Nehemiah', 'Esther',
'Job', 'Psalm', 'Proverbs', 'Ecclesiastes', 'Song of Solomon', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Isaiah', 'Jeremiah',
'Lamentations', 'Ezekiel', 'Daniel', 'Hosea', 'Joel', 'Amos', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Obadiah', 'Jonah',
'Micah', 'Nahum', 'Habakkuk', 'Zephaniah', 'Haggai', 'Zechariah', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Malachi', 'Matthew',
'Mark', 'Luke', 'John', 'Acts', 'Romans', '1 Corinthians', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '2 Corinthians',
'Galatians', 'Ephesians', 'Philippians', 'Colossians', '1 Thessalonians', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '2 Thessalonians', '1
Timothy', '2 Timothy', 'Titus', 'Philemon', 'Hebrews', 'James', <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; '1 Peter', '2 Peter', '1
John', '2 John', '3 John', 'Jude', 'Revelation'<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; ];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>getEmojiForVerse</span>
= (verse) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span class=GramE>(!verse</span>)
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#10024;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const book = <span
class=SpellE><span class=GramE>verse.split</span></span>(' <span class=GramE>')[</span>0<span
class=GramE>];</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (book === '1' || book
=== '2' || book === '3') {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>fullBookName</span> = <span class=SpellE><span class=GramE>verse.split</span></span>('
'<span class=GramE>).slice</span>(0, 2<span class=GramE>).join</span>(' '<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Samuel')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#128081;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Kings')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#127984;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Chronicles')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#128214;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Corinthians')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#9962;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Thessalonians')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#9203;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Timothy')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#128220;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Peter')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#128737;&#65039;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('John')) return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#10024;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switch (book) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Genesis':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127758;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Exodus':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128293;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Leviticus':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127807;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Numbers':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#129517;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case
'Deuteronomy': return '<span style='font-family:"Segoe UI Emoji",sans-serif;
mso-bidi-font-family:"Segoe UI Emoji"'>&#128220;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Joshua':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9876;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Judges':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9878;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Ruth':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127806;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Ezra':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127963;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Nehemiah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127959;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Esther':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128120;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Job': return
'<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9928;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Psalm':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128330;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Proverbs':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128161;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case
'Ecclesiastes': return '<span style='font-family:"Segoe UI Emoji",sans-serif;
mso-bidi-font-family:"Segoe UI Emoji"'>&#8987;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Song':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128150;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Isaiah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#129413;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Jeremiah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128591;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case
'Lamentations': return '<span style='font-family:"Segoe UI Emoji",sans-serif;
mso-bidi-font-family:"Segoe UI Emoji"'>&#128549;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Ezekiel':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127744;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Daniel':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#129409;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Hosea':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128141;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Joel':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#129431;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Amos':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9878;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Obadiah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127748;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Jonah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128051;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Micah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9968;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Nahum':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127754;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Habakkuk':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128694;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Zephaniah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127749;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Haggai':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128296;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Zechariah':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128052;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Malachi':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9728;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Matthew':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128081;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Mark':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#129409;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Luke':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128104;&#8205;&#9877;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Acts':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128293;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Romans':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127793;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Galatians':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#127822;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Ephesians':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9876;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case
'Philippians': return '<span style='font-family:"Segoe UI Emoji",sans-serif;
mso-bidi-font-family:"Segoe UI Emoji"'>&#10084;&#65039;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Colossians':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128591;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Titus':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128214;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Philemon':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#9939;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Hebrews':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#10013;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'James':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128483;&#65039;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Jude':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#129521;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Revelation':
return '<span style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:
"Segoe UI Emoji"'>&#128009;</span><span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default: return '<span
style='font-family:"Segoe UI Emoji",sans-serif;mso-bidi-font-family:"Segoe UI Emoji"'>&#128214;</span><span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>getBackgroundColorForVerse</span>
= (verse) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span class=GramE>(!verse</span>)
return 'bg-gray-100 dark:bg-gray-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const book = <span
class=SpellE><span class=GramE>verse.split</span></span>(' <span class=GramE>')[</span>0<span
class=GramE>];</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (book === '1' || book
=== '2' || book === '3') {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>fullBookName</span> = <span class=SpellE><span class=GramE>verse.split</span></span>('
'<span class=GramE>).slice</span>(0, 2<span class=GramE>).join</span>(' '<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Philippians')) return '<span
class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span> from-pink-300
to-purple-400 <span class=GramE>dark:from</span>-pink-800 dark:to-purple-900<span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Romans')) return '<span
class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span> from-blue-300
to-indigo-400 <span class=GramE>dark:from</span>-blue-800 dark:to-indigo-900<span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('John')) return '<span class=SpellE>bg</span>-gradient-to-<span
class=SpellE>br</span> from-sky-300 to-cyan-400 <span class=GramE>dark:from</span>-sky-800
dark:to-cyan-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Peter')) return '<span class=SpellE>bg</span>-gradient-to-<span
class=SpellE>br</span> from-slate-300 to-gray-400 <span class=GramE>dark:from</span>-slate-800
dark:to-gray-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Ephesians')) return '<span
class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-emerald-300 to-green-400 <span class=GramE>dark:from</span>-emerald-800
dark:to-green-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Galatians')) return '<span
class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span> from-lime-300
to-emerald-400 <span class=GramE>dark:from</span>-lime-800 dark:to-emerald-900<span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>fullBookName.includes</span>('Timothy')) return '<span
class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span> from-cyan-300
to-blue-400 <span class=GramE>dark:from</span>-cyan-800 dark:to-blue-900<span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; switch (book) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Proverbs':
return '<span class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-yellow-300 to-orange-400 <span class=GramE>dark:from</span>-yellow-800
dark:to-orange-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Jeremiah':
return '<span class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-green-300 to-teal-400 <span class=GramE>dark:from</span>-green-800
dark:to-teal-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Joshua':
return '<span class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-red-300 to-rose-400 <span class=GramE>dark:from</span>-red-800
dark:to-rose-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Psalm':
return '<span class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-purple-300 to-fuchsia-400 <span class=GramE>dark:from</span>-purple-800
dark:to-fuchsia-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Isaiah':
return '<span class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-amber-300 to-lime-400 <span class=GramE>dark:from</span>-amber-800
dark:to-lime-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; case 'Matthew':
return '<span class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span>
from-rose-300 to-red-400 <span class=GramE>dark:from</span>-rose-800
dark:to-red-900<span class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; default: return '<span
class=SpellE>bg</span>-gradient-to-<span class=SpellE>br</span> from-gray-300
to-slate-400 <span class=GramE>dark:from</span>-gray-800 dark:to-slate-900<span
class=GramE>';</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; // Mock data for chapter and
verse counts.<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>getChapterCount</span>
= (book) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const counts = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Genesis': 50,
'Exodus': 40, 'Matthew': 28, 'John': 21, 'Psalm': 150,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Proverbs': 31,
'Isaiah': 66, 'Jeremiah': 52, 'Revelation': 22,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'Philippians': 4,
'Romans': 16, '1 Corinthians': 16, 'Hebrews': 13,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 'James': 5,
'Jude': 1<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return counts[book] || <span
class=GramE>30;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>getVerseCount</span>
= (book, chapter) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (book === 'Psalm'
&amp;&amp; chapter === '119') return <span class=GramE>176;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (book === 'John'
&amp;&amp; chapter === '3') return <span class=GramE>36;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (book === 'Romans'
&amp;&amp; chapter === '8') return <span class=GramE>39;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return <span
class=SpellE>Math.floor</span>(<span class=SpellE>Math.random</span>() * 20) + <span
class=GramE>15;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; const App = () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>db</span>, <span class=SpellE>setDb</span>] = <span class=SpellE>useState</span>(null<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [auth, <span
class=SpellE>setAuth</span>] = <span class=SpellE>useState</span>(null<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>userId</span>, <span class=SpellE>setUserId</span>] = <span
class=SpellE>useState</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>isAuthReady</span>, <span class=SpellE>setIsAuthReady</span>] = <span
class=SpellE>useState</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>isLoading</span>, <span class=SpellE>setIsLoading</span>] = <span
class=SpellE>useState</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>devotionalContent</span>, <span class=SpellE>setDevotionalContent</span>]
= <span class=SpellE>useState</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>journalEntry</span>, <span class=SpellE>setJournalEntry</span>] = <span
class=SpellE><span class=GramE>useState</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>savedEntries</span>, <span class=SpellE>setSavedEntries</span>] = <span
class=SpellE><span class=GramE>useState</span></span><span class=GramE>(</span>[]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>selectedEntry</span>, <span class=SpellE>setSelectedEntry</span>]
= <span class=SpellE>useState</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>searchTerm</span>, <span class=SpellE>setSearchTerm</span>] = <span
class=SpellE><span class=GramE>useState</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>expandedEntryId</span>, <span class=SpellE>setExpandedEntryId</span>]
= <span class=SpellE>useState</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>isSpeaking</span>, <span class=SpellE>setIsSpeaking</span>] = <span
class=SpellE>useState</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>audioInstance</span>, <span class=SpellE>setAudioInstance</span>]
= <span class=SpellE>useState</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>isAudioLoading</span>, <span class=SpellE>setIsAudioLoading</span>]
= <span class=SpellE>useState</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>selectedBook</span>, <span class=SpellE>setSelectedBook</span>] = <span
class=SpellE><span class=GramE>useState</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>selectedChapter</span>, <span class=SpellE>setSelectedChapter</span>]
= <span class=SpellE><span class=GramE>useState</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [<span
class=SpellE>selectedVerseNumber</span>, <span class=SpellE>setSelectedVerseNumber</span>]
= <span class=SpellE><span class=GramE>useState</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [topic, <span
class=SpellE>setTopic</span>] = <span class=SpellE><span class=GramE>useState</span></span><span
class=GramE>(</span>''<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [chapters, <span
class=SpellE>setChapters</span>] = <span class=SpellE><span class=GramE>useState</span></span><span
class=GramE>(</span>[]<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const [verses, <span
class=SpellE>setVerses</span>] = <span class=SpellE><span class=GramE>useState</span></span><span
class=GramE>(</span>[]<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // API call to fetch a
KJV verse.<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>fetchVerseFromAPI</span>
= async (book, chapter, verse) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const query =
`${book} ${chapter<span class=GramE>}:$</span>{verse}<span class=GramE>`.replace</span>(/
/g, '+'<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>url</span> = `https://bible-api.com/${query}?translation=kjv<span
class=GramE>`;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
response = await fetch(<span class=SpellE>url</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>response</span></span><span class=SpellE>.<span
class=GramE>ok</span></span><span class=GramE>) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
throw new <span class=GramE>Error(</span>`Verse not found. Please try another <span
class=GramE>one.`);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const data
= await <span class=SpellE><span class=GramE>response.json</span></span>(<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE><span class=GramE>data.error</span></span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
throw new Error(<span class=SpellE><span class=GramE>data.error</span></span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
verse: <span class=SpellE><span class=GramE>data.reference</span></span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
text: <span class=SpellE>data.text</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;API fetch
error:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; throw new <span
class=GramE>Error(</span>&quot;Failed to fetch verse. Please check your
spelling and try again.&quot;<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Fetches <span
class=GramE>a verse</span> and devotional content based on a topic using
Gemini.<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>fetchDevotionalFromTopic</span>
= async (topic) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>systemPrompt</span> = &quot;You are a warm, encouraging, and
knowledgeable spiritual guide. Your purpose is to find an appropriate King
James Version (KJV) Bible verse for a given topic and provide a short,
insightful devotional for it. You must provide the verse reference (KJV) and
text, a devotional, a personal affirmation, a suggested prayer, and a
thought-provoking question for journaling. Every prayer must end with the
phrase 'In Jesus' name, Amen.'. All responses must be in JSON format with keys
'verse', '<span class=SpellE>verseText</span>', 'devotional', 'affirmation',
'prayer', and 'question'. Do not include any other text or explanation. The
devotional content should be entirely based on the verse you choose.<span
class=GramE>&quot;;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>userQuery</span> = `Find a single Bible verse from the King James
Version that relates to the topic of &quot;${topic}&quot;. Then, create a short
devotional, a personal affirmation, a suggested prayer, and a thought-provoking
question for journaling based on that <span class=GramE>verse.`</span>;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>apiKey</span> = &quot;<span class=GramE>&quot;;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>apiUrl</span> =
`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-05-20:generateContent?key=${apiKey}<span
class=GramE>`;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
payload = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
contents: <span class=GramE>[{ parts</span>: <span class=GramE>[{ text</span>: <span
class=SpellE><span class=GramE>userQuery</span></span><span class=GramE> }</span>]
}],<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>systemInstruction</span></span><span
class=GramE>: {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; parts: <span class=GramE>[{ text</span>: <span class=SpellE><span
class=GramE>systemPrompt</span></span><span class=GramE> }</span>]<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>generationConfig</span></span><span class=GramE>:
{</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>responseMimeType</span>: &quot;application/<span
class=SpellE>json</span>&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>responseSchema</span></span><span
class=GramE>: {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; type: &quot;OBJECT&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; <span class=GramE>properties: {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &quot;verse&quot;: <span class=GramE>{ &quot;</span>type&quot;:
&quot;STRING<span class=GramE>&quot; }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &quot;<span class=SpellE>verseText</span>&quot;: <span
class=GramE>{ &quot;</span>type&quot;: &quot;STRING<span class=GramE>&quot; }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &quot;devotional&quot;: <span class=GramE>{ &quot;</span>type&quot;:
&quot;STRING<span class=GramE>&quot; }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &quot;affirmation&quot;: <span class=GramE>{ &quot;</span>type&quot;:
&quot;STRING<span class=GramE>&quot; }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &quot;prayer&quot;: <span class=GramE>{ &quot;</span>type&quot;:
&quot;STRING<span class=GramE>&quot; }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &quot;question&quot;: <span class=GramE>{ &quot;</span>type&quot;:
&quot;STRING<span class=GramE>&quot; }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &quot;<span class=SpellE>propertyOrdering</span>&quot;:
[&quot;verse&quot;, &quot;<span class=SpellE>verseText</span>&quot;,
&quot;devotional&quot;, &quot;affirmation&quot;, &quot;prayer&quot;,
&quot;question&quot;]<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const response = await <span class=GramE>fetch(</span><span class=SpellE>apiUrl</span>,
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; method: 'POST',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; headers: <span class=GramE>{ '</span>Content-Type': 'application/<span
class=SpellE>json</span><span class=GramE>' }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; body: <span class=SpellE>JSON.stringify</span>(payload)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const result = await <span class=SpellE><span class=GramE>response.json</span></span>(<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const text = <span class=SpellE>result<span class=GramE>?.candidates</span></span>?.[0]<span
class=GramE>?.<span class=SpellE>content?.parts</span></span>?.[0]?.<span
class=GramE>text;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const <span class=SpellE>parsedContent</span> = <span class=SpellE>JSON.parse</span>(text<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
return <span class=SpellE><span class=GramE>parsedContent</span></span><span
class=GramE>;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Failed to
fetch devotional content from topic:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
throw new <span class=GramE>Error(</span>&quot;Failed to generate content for
this topic.&quot;<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>getRandomVerse</span>
= async () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const verses = [<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'John', chapter: '3', verse: '16<span class=GramE>'
}</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'Psalm', chapter: '23', verse: '1<span class=GramE>'
}</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'Philippians', chapter: '4', verse: '13<span
class=GramE>' }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'Genesis', chapter: '1', verse: '1<span class=GramE>'
}</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'Isaiah', chapter: '41', verse: '10<span
class=GramE>' }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'Jeremiah', chapter: '29', verse: '11<span
class=GramE>' }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: '1 Corinthians', chapter: '13', verse: '<span
class=GramE>4'}</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>{ book</span>: 'Romans', chapter: '8', verse: '<span class=GramE>28'}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ];<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>randomVerse</span> = <span class=GramE>verses[</span><span
class=SpellE>Math.floor</span>(<span class=SpellE>Math.random</span>() * <span
class=SpellE><span class=GramE>verses.length</span></span>)<span class=GramE>];</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return await <span
class=SpellE><span class=GramE>fetchVerseFromAPI</span></span><span
class=GramE>(</span><span class=SpellE>randomVerse.book</span>, <span
class=SpellE>randomVerse.chapter</span>, <span class=SpellE>randomVerse.verse</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Initialize Firebase
and set up auth state listener<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE><span
class=GramE>useEffect</span></span><span class=GramE>(</span>() =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const app =
<span class=SpellE>initializeApp</span>(<span class=SpellE>firebaseConfig</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>firestore</span> = <span class=SpellE>getFirestore</span>(app<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>authInstance</span> = <span class=SpellE>getAuth</span>(app<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setDb</span>(<span class=SpellE>firestore</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setAuth</span>(<span class=SpellE>authInstance</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
unsubscribe = <span class=SpellE><span class=GramE>onAuthStateChanged</span></span><span
class=GramE>(</span><span class=SpellE>authInstance</span>, async (user) =&gt;
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if
(user) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setUserId</span>(<span class=SpellE>user.uid</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }
else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; if (<span class=SpellE><span class=GramE>initialAuthToken</span></span><span
class=GramE>) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; await <span class=SpellE><span class=GramE>signInWithCustomToken</span></span><span
class=GramE>(</span><span class=SpellE>authInstance</span>, <span class=SpellE>initialAuthToken</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; await <span class=SpellE>signInAnonymously</span>(<span
class=SpellE>authInstance</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; } catch (<span class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; <span class=SpellE><span class=GramE>console.error</span></span>(&quot;Firebase
auth error:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsAuthReady</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return ()
=&gt; <span class=GramE>unsubscribe();</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>e) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Firebase
initialization error:&quot;, e<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, []);<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Effect to clean up
audio instance when devotional content changes<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE><span
class=GramE>useEffect</span></span><span class=GramE>(</span>() =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioInstance</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>audioInstance.pause</span>(<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioInstance.src</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>URL.revokeObjectURL</span>(<span class=SpellE>audioInstance.src</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setAudioInstance</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsSpeaking</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, [<span class=SpellE>devotionalContent</span>]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Effect to update
chapters dropdown when book changes<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE><span
class=GramE>useEffect</span></span><span class=GramE>(</span>() =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>selectedBook</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>chapterCount</span> = <span class=SpellE>getChapterCount</span>(<span
class=SpellE>selectedBook</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>chapterOptions</span> = <span class=SpellE>Array.from</span><span
class=GramE>({ length</span>: <span class=SpellE><span class=GramE>chapterCount</span></span><span
class=GramE> }</span>, (_, <span class=SpellE>i</span>) =&gt; <span
class=SpellE>i</span> + 1<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setChapters</span>(<span class=SpellE>chapterOptions</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setSelectedChapter</span></span><span
class=GramE>(</span>''<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setSelectedVerseNumber</span></span><span
class=GramE>(</span>''<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setChapters</span></span><span class=GramE>(</span>[]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setVerses</span></span><span class=GramE>(</span>[]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, [<span class=SpellE>selectedBook</span>]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Effect to update
verses dropdown when chapter changes<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE><span
class=GramE>useEffect</span></span><span class=GramE>(</span>() =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>selectedBook</span> &amp;&amp; <span class=SpellE><span
class=GramE>selectedChapter</span></span><span class=GramE>) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>verseCount</span> = <span class=SpellE><span class=GramE>getVerseCount</span></span><span
class=GramE>(</span><span class=SpellE>selectedBook</span>, <span class=SpellE>selectedChapter</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>verseOptions</span> = <span class=SpellE>Array.from</span><span
class=GramE>({ length</span>: <span class=SpellE><span class=GramE>verseCount</span></span><span
class=GramE> }</span>, (_, <span class=SpellE>i</span>) =&gt; <span
class=SpellE>i</span> + 1<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setVerses</span>(<span class=SpellE>verseOptions</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setSelectedVerseNumber</span></span><span
class=GramE>(</span>''<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setVerses</span></span><span class=GramE>(</span>[]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, [<span class=SpellE>selectedBook</span>,
<span class=SpellE>selectedChapter</span>]<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleVerseSearch</span>
= async () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>selectedBook</span></span> |<span class=GramE>|
!<span class=SpellE>selectedChapter</span></span> |<span class=GramE>| !<span
class=SpellE>selectedVerseNumber</span></span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>setDevotionalContent</span></span><span
class=GramE>(</span>{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; verse: 'Invalid Input',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>verseText</span>: 'Please enter a valid
book, chapter, and verse.',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; devotional: &quot;The verse you selected could not be
found. Please check your selection and try again.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; affirmation: &quot;I trust in God's perfect timing.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; prayer: &quot;Lord, guide my steps and my search. In
Jesus' name, Amen.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; question: &quot;How can I seek guidance in new ways
today?&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsLoading</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setDevotionalContent</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; const <span class=SpellE>verseData</span> = await <span class=SpellE><span
class=GramE>fetchVerseFromAPI</span></span><span class=GramE>(</span><span
class=SpellE>selectedBook</span>, <span class=SpellE>selectedChapter</span>, <span
class=SpellE>selectedVerseNumber</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; await <span class=SpellE><span class=GramE>fetchDevotional</span></span><span
class=GramE>({ type</span>: 'verse', value: <span class=SpellE><span
class=GramE>verseData</span></span><span class=GramE> });</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>console.error</span></span>(&quot;Error
fetching verse:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>setDevotionalContent</span></span><span
class=GramE>(</span>{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; verse: 'Error',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>verseText</span>: <span class=SpellE><span
class=GramE>error.message</span></span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; devotional: &quot;The verse you selected could not be
found. Please check your selection and try again.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; affirmation: &quot;I trust in God's perfect timing.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; prayer: &quot;Lord, guide my steps and my search. In
Jesus' name, Amen.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; question: &quot;How can I seek guidance in new ways
today?&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setIsLoading</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleTopicSearch</span>
= async () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>topic</span></span><span class=SpellE>.<span
class=GramE>trim</span></span><span class=GramE>()) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>setDevotionalContent</span></span><span
class=GramE>(</span>{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; verse: 'Invalid Topic',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>verseText</span>: 'Please enter a topic
to search for.',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; devotional: &quot;Please provide a topic. Be specific, for
example: 'healing from a broken heart'.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; affirmation: &quot;My strength comes from God.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; prayer: &quot;Lord, please give me clarity as I seek your
guidance. In Jesus' name, Amen.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; question: &quot;What is one specific step you can take to
move forward?&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsLoading</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setDevotionalContent</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; const content = await <span class=SpellE>fetchDevotionalFromTopic</span>(topic<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setDevotionalContent</span>(content<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>console.error</span></span>(&quot;Error
fetching devotional from topic:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>setDevotionalContent</span></span><span
class=GramE>(</span>{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; verse: 'Error',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>verseText</span>: 'Failed to find a
verse for this topic.',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; devotional: &quot;Sorry, I couldn't find a verse for that
topic. Please try a different one.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; affirmation: &quot;I trust in God's wisdom.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; prayer: &quot;Lord, thank you for guiding me. In Jesus'
name, Amen.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; question: &quot;How can I continue to seek spiritual
guidance today?&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setIsLoading</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleRandomVerse</span>
= async () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsLoading</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setDevotionalContent</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>verseData</span> = await <span class=SpellE><span class=GramE>getRandomVerse</span></span><span
class=GramE>();</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setSelectedBook</span></span><span class=GramE>(<span
class=SpellE>verseData.verse.split</span></span>(' <span class=GramE>')[</span>0]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setSelectedChapter</span></span><span
class=GramE>(<span class=SpellE>verseData.verse.split</span></span>(' <span
class=GramE>')[</span>1<span class=GramE>].split</span>(':<span class=GramE>')[</span>0]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setSelectedVerseNumber</span></span><span
class=GramE>(<span class=SpellE>verseData.verse.split</span></span>(':<span
class=GramE>')[</span>1]<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; await <span
class=SpellE><span class=GramE>fetchDevotional</span></span><span class=GramE>({
type</span>: 'verse', value: <span class=SpellE><span class=GramE>verseData</span></span><span
class=GramE> });</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Error fetching
random verse:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setDevotionalContent</span></span><span
class=GramE>(</span>{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
verse: 'Error',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>verseText</span>: &quot;Failed to load a random verse. Please try
again.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
devotional: &quot;The verse you selected could not be found. Please check your
selection and try again.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
affirmation: &quot;I trust in God's perfect timing.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
prayer: &quot;Lord, guide my steps and my search. In Jesus' name, Amen.&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
question: &quot;How can I seek guidance in new ways today?&quot;,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsLoading</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Fetch saved journal
entries from <span class=SpellE>Firestore</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE><span
class=GramE>useEffect</span></span><span class=GramE>(</span>() =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>db</span></span> |<span class=GramE>| !<span
class=SpellE>isAuthReady</span></span> |<span class=GramE>| !<span
class=SpellE>userId</span></span>) <span class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>collectionPath</span> = `artifacts/${<span class=SpellE>appId</span>}/users/${<span
class=SpellE>userId</span>}/<span class=SpellE>journalEntries</span><span
class=GramE>`;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>entriesRef</span> = <span class=GramE>collection(</span><span
class=SpellE>db</span>, <span class=SpellE>collectionPath</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const q = <span
class=GramE>query(</span><span class=SpellE>entriesRef</span>, <span
class=SpellE><span class=GramE>orderBy</span></span><span class=GramE>(</span>&quot;timestamp&quot;,
&quot;desc&quot;)<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const unsubscribe
= <span class=SpellE><span class=GramE>onSnapshot</span></span><span
class=GramE>(</span>q, (snapshot) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
entries = <span class=SpellE><span class=GramE>snapshot.docs.map</span></span><span
class=GramE>(</span>doc =<span class=GramE>&gt; ({</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; id:
doc.id,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ...<span
class=SpellE>doc.<span class=GramE>data</span></span><span class=GramE>(</span>)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }));<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setSavedEntries</span>(entries<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, (error) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;<span
class=SpellE>Firestore</span> data listener failed:&quot;, error<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return () =&gt; <span
class=GramE>unsubscribe();</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }, [<span class=SpellE>db</span>,
<span class=SpellE>isAuthReady</span>, <span class=SpellE>userId</span>]<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Save or update journal
entry<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleSaveEntry</span>
= async () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>db</span></span> |<span class=GramE>| !<span
class=SpellE>userId</span></span> || <span class=SpellE>journalEntry.trim</span>()
=== '') <span class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>devotionalContent</span></span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;No devotional
content to save with the journal entry.&quot;<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>entryId</span> = <span class=SpellE><span class=GramE>selectedEntry</span></span><span
class=GramE> ?</span> <span class=GramE>selectedEntry.id :</span> new Date(<span
class=GramE>).<span class=SpellE>toISOString</span></span>(<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>docPath</span> = `artifacts/${<span class=SpellE>appId</span>}/users/${<span
class=SpellE>userId</span>}/<span class=SpellE>journalEntries</span>/${<span
class=SpellE>entryId</span>}<span class=GramE>`;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>entryData</span> = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text: <span
class=SpellE>journalEntry</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; timestamp:
new Date(<span class=GramE>).<span class=SpellE>toISOString</span></span>(),<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; date: new
Date(<span class=GramE>).<span class=SpellE>toLocaleDateString</span></span>(),<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; devotional:
<span class=SpellE>devotionalContent</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; await <span
class=SpellE><span class=GramE>setDoc</span></span><span class=GramE>(doc(</span><span
class=SpellE>db</span>, <span class=SpellE>docPath</span>), <span class=SpellE>entryData</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setJournalEntry</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setSelectedEntry</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>e) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Error saving
journal entry:&quot;, e<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Delete a journal entry<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleDeleteEntry</span>
= async (<span class=SpellE>entryId</span>) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>db</span></span> |<span class=GramE>| !<span
class=SpellE>userId</span></span>) <span class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>docPath</span> = `artifacts/${<span class=SpellE>appId</span>}/users/${<span
class=SpellE>userId</span>}/<span class=SpellE>journalEntries</span>/${<span
class=SpellE>entryId</span>}<span class=GramE>`;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; await <span
class=SpellE><span class=GramE>deleteDoc</span></span><span class=GramE>(doc(</span><span
class=SpellE>db</span>, <span class=SpellE>docPath</span>)<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>selectedEntry</span> &amp;&amp; selectedEntry.id === <span
class=SpellE>entryId</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setJournalEntry</span></span><span class=GramE>(</span>''<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setSelectedEntry</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>e) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Error deleting
journal entry:&quot;, e<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Filtered entries based
on search <span class=GramE>term</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>filteredEntries</span>
= <span class=SpellE>savedEntries.filter</span>(entry =&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>entry.<span class=GramE>text.toLowerCase</span></span>(<span
class=GramE>).includes</span>(<span class=SpellE>searchTerm.toLowerCase</span>())
||<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; (<span
class=SpellE><span class=GramE>entry.devotional</span></span> &amp;&amp; <span
class=GramE>entry.devotional</span>.<span class=GramE>verse.toLowerCase</span>(<span
class=GramE>).includes</span>(searchTerm.toLowerCase()))<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; );<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleEditEntry</span>
= (entry) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setSelectedEntry</span>(entry<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setJournalEntry</span>(<span class=SpellE>entry.text</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE><span class=GramE>entry.devotional</span></span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setDevotionalContent</span>(<span class=SpellE><span class=GramE>entry.devotional</span></span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>window.scrollTo</span></span><span class=GramE>({
top</span>: 0, behavior: 'smooth<span class=GramE>' });</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleToggleExpand</span>
= (id) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>setExpandedEntryId</span></span><span
class=GramE>(</span><span class=SpellE>expandedEntryId</span> === <span
class=GramE>id ?</span> <span class=GramE>null :</span> id<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Helper function to
convert base64 to <span class=SpellE>ArrayBuffer</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const base64ToArrayBuffer
= (base64) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>binaryString</span> = <span class=SpellE><span class=GramE>window.atob</span></span>(base64<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>len</span> = <span class=SpellE>binaryString.<span class=GramE>length</span></span><span
class=GramE>;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const bytes = new
Uint8Array(<span class=SpellE>len</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let <span
class=SpellE>i</span> = 0; <span class=SpellE>i</span> &lt; <span class=SpellE>len</span>;
<span class=SpellE>i</span>+<span class=GramE>+) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bytes[<span
class=SpellE>i</span>] = <span class=SpellE>binaryString.charCodeAt</span>(<span
class=SpellE>i</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return <span
class=SpellE><span class=GramE>bytes.buffer</span></span>;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Helper function to
convert PCM to WAV format<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>pcmToWav</span>
= (<span class=SpellE>pcmData</span>, <span class=SpellE>sampleRate</span>)
=&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const pcm16 = new
Int16Array(<span class=SpellE>pcmData</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>dataLength</span> = pcm16.length * <span class=GramE>2;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const buffer = new
<span class=SpellE><span class=GramE>ArrayBuffer</span></span><span
class=GramE>(</span>44 + <span class=SpellE>dataLength</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const view = new <span
class=SpellE>DataView</span>(buffer<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let offset = <span
class=GramE>0;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // RIFF identifier<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>writeString</span></span><span class=GramE>(</span>view,
offset, 'RIFF'<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // file length<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>32(offset,
36 + <span class=SpellE>dataLength</span>, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // RIFF type<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>writeString</span></span><span class=GramE>(</span>view,
offset, 'WAVE'<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // format chunk
identifier<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>writeString</span></span><span class=GramE>(</span>view,
offset, '<span class=SpellE>fmt</span> '<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // format chunk
length<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>32(offset,
16, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // sample format
(1 for PCM)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>16(offset,
1, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>2;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // channel count<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>16(offset,
1, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>2;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // sample rate<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>32(offset,
<span class=SpellE>sampleRate</span>, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // byte rate
(sample rate * block align)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>32(offset,
<span class=SpellE>sampleRate</span> * 2, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // <span
class=GramE>block</span> align (channels * bytes per sample)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>16(offset,
2, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>2;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // bits per sample<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>16(offset,
16, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>2;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // data chunk
identifier<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>writeString</span></span><span class=GramE>(</span>view,
offset, 'data'<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // data chunk
length<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>view.setUint</span>32(offset,
<span class=SpellE>dataLength</span>, true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; offset += <span
class=GramE>4;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Write the PCM
data<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let <span
class=SpellE>i</span> = 0; <span class=SpellE>i</span> &lt; pcm16.length; <span
class=SpellE>i</span>++, offset += 2) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>view.setInt</span>16(offset, pcm16[<span class=SpellE>i</span>],
true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return new
Blob([buffer], <span class=GramE>{ type</span>: 'audio/wav<span class=GramE>'
});</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>writeString</span>
= (view, offset, string) =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let <span
class=SpellE>i</span> = 0; <span class=SpellE>i</span> &lt; <span class=SpellE><span
class=GramE>string.length</span></span>; <span class=SpellE>i</span>+<span
class=GramE>+) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=GramE>view.setUint</span>8(offset + <span class=SpellE>i</span>, <span
class=SpellE><span class=GramE>string.charCodeAt</span></span>(<span
class=SpellE>i</span>)<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Handle TTS and
playback<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleReadAloud</span>
= async () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>devotionalContent</span></span> || <span
class=SpellE>isAudioLoading</span>) <span class=GramE>return;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioInstance</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>audioInstance.pause</span>(<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioInstance.src</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>URL.revokeObjectURL</span>(<span class=SpellE>audioInstance.src</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setAudioInstance</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsSpeaking</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsAudioLoading</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>textToSpeak</span> = `<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; The verse
for today is ${<span class=SpellE>devotionalContent.<span class=GramE>verse</span></span><span
class=GramE>}.</span> <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ${<span
class=SpellE>devotionalContent.<span class=GramE>verseText</span></span><span
class=GramE>}.</span> <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Devotional:
${<span class=SpellE>devotionalContent.<span class=GramE>devotional</span></span><span
class=GramE>}.</span> <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
Affirmation: ${<span class=SpellE>devotionalContent.<span class=GramE>affirmation</span></span><span
class=GramE>}.</span> <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A Prayer to
Consider: ${<span class=SpellE>devotionalContent.<span class=GramE>prayer</span></span><span
class=GramE>}.</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; `;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const payload = {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; contents<span
class=GramE>: [{</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
parts: <span class=GramE>[{ text</span>: <span class=SpellE><span class=GramE>textToSpeak</span></span><span
class=GramE> }</span>]<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }],<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>generationConfig</span></span><span class=GramE>:
{</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>responseModalities</span>: [&quot;AUDIO&quot;],<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>speechConfig</span></span><span class=GramE>: {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE><span class=GramE>voiceConfig</span></span><span
class=GramE>: {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; <span class=SpellE>prebuiltVoiceConfig</span>: <span class=GramE>{
<span class=SpellE>voiceName</span></span>: &quot;Iapetus<span class=GramE>&quot;
}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; },<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; model:
&quot;gemini-2.5-flash-preview-tts&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>apiKey</span> = &quot;<span class=GramE>&quot;;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>apiUrl</span> =
`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash-preview-tts:generateContent?key=${apiKey}<span
class=GramE>`;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
response = await <span class=GramE>fetch(</span><span class=SpellE>apiUrl</span>,
{<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
method: 'POST',<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
headers: <span class=GramE>{ '</span>Content-Type': 'application/<span
class=SpellE>json</span><span class=GramE>' }</span>,<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
body: <span class=SpellE>JSON.stringify</span>(payload)<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; });<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if <span
class=GramE>(!<span class=SpellE>response</span></span><span class=SpellE>.<span
class=GramE>ok</span></span><span class=GramE>) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
throw new <span class=GramE>Error(</span>`API response was not ok: ${<span
class=SpellE><span class=GramE>response.statusText</span></span>}`<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const
result = await <span class=SpellE><span class=GramE>response.json</span></span>(<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const part
= <span class=SpellE>result<span class=GramE>?.candidates</span></span>?.[0]<span
class=GramE>?.<span class=SpellE>content?.parts</span></span>?.[0<span
class=GramE>];</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>audioData</span> = part<span class=GramE>?.<span class=SpellE>inlineData</span></span>?.<span
class=GramE>data;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span
class=SpellE>mimeType</span> = <span class=GramE>part?.<span class=SpellE>inlineData</span>?.<span
class=SpellE>mimeType</span>;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioData</span> &amp;&amp; <span class=SpellE>mimeType</span>
&amp;&amp; <span class=SpellE>mimeType.startsWith</span>(&quot;audio/L16&quot;<span
class=GramE>)) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const <span class=SpellE>sampleRateMatch</span> = <span class=SpellE>mimeType.match</span>(/rate=(\d+)/<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const <span class=SpellE>sampleRate</span> = <span class=SpellE><span
class=GramE>sampleRateMatch</span></span><span class=GramE> ?</span> <span
class=SpellE>parseInt</span>(<span class=SpellE><span class=GramE>sampleRateMatch</span></span><span
class=GramE>[</span>1], 10<span class=GramE>) :</span> <span class=GramE>16000;</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const <span class=SpellE>pcmData</span> = base64ToArrayBuffer(<span
class=SpellE>audioData</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const <span class=SpellE>wavBlob</span> = <span class=SpellE><span class=GramE>pcmToWav</span></span><span
class=GramE>(</span><span class=SpellE>pcmData</span>, <span class=SpellE>sampleRate</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const <span class=SpellE>audioUrl</span> = <span class=SpellE>URL.createObjectURL</span>(<span
class=SpellE>wavBlob</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
const audio = new Audio(<span class=SpellE>audioUrl</span><span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setAudioInstance</span>(audio<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>audio.play</span></span>(<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>audio.onended</span></span> = () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setIsSpeaking</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setAudioInstance</span>(null<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>setIsAudioLoading</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <span class=SpellE>URL.revokeObjectURL</span>(<span class=SpellE>audioUrl</span><span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Invalid audio
data from API:&quot;, result<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } catch (<span
class=GramE>error) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE><span class=GramE>console.error</span></span>(&quot;Error reading
devotional aloud:&quot;, error<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsSpeaking</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } finally {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsAudioLoading</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; // Handle pausing and
resuming audio<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; const <span class=SpellE>handleTogglePlayPause</span>
= () =&gt; {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioInstance</span>) {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (<span
class=SpellE>audioInstance.<span class=GramE>paused</span></span><span
class=GramE>) {</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>audioInstance.play</span>(<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsSpeaking</span>(true<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } else {<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>audioInstance.pause</span>(<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span
class=SpellE>setIsSpeaking</span>(false<span class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; return (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span
class=SpellE>className</span><span class=GramE>={</span>`min-h-screen ${<span
class=SpellE>getBackgroundColorForVerse</span>(<span class=SpellE>devotionalContent</span><span
class=GramE>?.verse</span>)} text-gray-900 dark:text-gray-100 flex flex-col
items-center justify-center p-4 <span class=GramE>sm:p</span>-6 <span
class=GramE>md:p</span>-8 font-sans transition-colors duration-500`}&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span
class=SpellE>className</span>=&quot;w-full max-w-4xl <span class=SpellE>bg</span>-white
dark:bg-gray-800 rounded-2xl shadow-xl overflow-hidden&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;div <span class=SpellE>className</span>=&quot;p-6 <span class=GramE>sm:p</span>-8&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;h1 <span class=SpellE>className</span>=&quot;text-3xl sm:text-4xl
font-extrabold text-center mb-2 text-indigo-600
dark:text-indigo-400&quot;&gt;Daily Devotional&lt;/h1&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-<span class=SpellE>sm</span>
<span class=SpellE>sm:text-base</span> text-center mb-6 text-gray-600
dark:text-gray-300&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; A space for reflection and prayer.<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;div <span class=SpellE>className</span>=&quot;bg-gray-50
dark:bg-gray-700 p-4 <span class=GramE>sm:p</span>-6 rounded-xl border
border-gray-200 <span class=GramE>dark:border</span>-gray-700 mb-6
transition-all duration-300&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;h2 <span class=SpellE>className</span>=&quot;text-xl
font-semibold mb-4 text-indigo-700 dark:text-indigo-300&quot;&gt;Search for a
Verse by Reference&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=<span class=GramE>&quot;flex
</span>flex-<span class=GramE>col</span> <span class=SpellE><span class=GramE>sm:flex</span>-row</span>
gap-4 mb-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;select<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; value={<span class=SpellE>selectedBook</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onChange</span><span
class=GramE>={(</span>e) =&gt; <span class=SpellE>setSelectedBook</span>(<span
class=SpellE><span class=GramE>e.target</span>.<span class=GramE>value</span></span><span
class=GramE>)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;flex-1
px-4 py-2 rounded-<span class=GramE>full border</span> border-gray-300 <span
class=GramE>dark:border</span>-gray-600 bg-gray-100 dark:bg-gray-700
text-gray-700 dark:text-gray-200 <span class=SpellE><span class=GramE>focus:outline</span>-none</span>
<span class=GramE>focus:ring</span>-2 <span class=GramE>focus:ring</span>-indigo-500&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=&quot;&quot; disabled&gt;Select a
Book&lt;/option&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>{<span class=SpellE>BIBLE_BOOKS.map</span>((</span>book)
=&gt; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option key={book}
value={book}&gt;{book}&lt;/option&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>))}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/select&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;select<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; value={<span class=SpellE>selectedChapter</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onChange</span><span
class=GramE>={(</span>e) =&gt; <span class=SpellE>setSelectedChapter</span>(<span
class=SpellE><span class=GramE>e.target</span>.<span class=GramE>value</span></span><span
class=GramE>)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; disabled=<span class=GramE>{!<span class=SpellE>selectedBook</span></span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;flex-1
px-4 py-2 rounded-full border border-gray-300 <span class=GramE>dark:border</span>-gray-600
bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 <span
class=SpellE><span class=GramE>focus:outline</span>-none</span> <span
class=GramE>focus:ring</span>-2 <span class=GramE>focus:ring</span>-indigo-500 <span
class=GramE>disabled:opacity</span>-50&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=&quot;&quot; disabled<span
class=GramE>&gt;{<span class=SpellE>selectedBook</span> ?</span> 'Select a
Chapter<span class=GramE>' :</span> 'Select a Book First<span class=GramE>'}&lt;</span>/option&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE><span class=GramE>chapters.map</span></span><span
class=GramE>(</span>chapter =&gt; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option key={chapter}
value={chapter}&gt;{chapter}&lt;/option&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>))}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/select&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;select<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; value={<span class=SpellE>selectedVerseNumber</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onChange</span><span
class=GramE>={(</span>e) =&gt; <span class=SpellE>setSelectedVerseNumber</span>(<span
class=SpellE><span class=GramE>e.target</span>.<span class=GramE>value</span></span><span
class=GramE>)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; disabled=<span class=GramE>{!<span class=SpellE>selectedChapter</span></span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;flex-1
px-4 py-2 rounded-full border border-gray-300 <span class=GramE>dark:border</span>-gray-600
bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-200 <span
class=SpellE><span class=GramE>focus:outline</span>-none</span> <span
class=GramE>focus:ring</span>-2 <span class=GramE>focus:ring</span>-indigo-500 <span
class=GramE>disabled:opacity</span>-50&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;option value=&quot;&quot; disabled<span
class=GramE>&gt;{<span class=SpellE>selectedChapter</span> ?</span> 'Select a
Verse<span class=GramE>' :</span> 'Select a Chapter First<span class=GramE>'}&lt;</span>/option&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE><span class=GramE>verses.map</span></span><span
class=GramE>(</span>verse =&gt; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;option key={verse}
value={verse}&gt;{verse}&lt;/option&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=GramE>))}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/select&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
justify-center flex-col <span class=SpellE><span class=GramE>sm:flex</span>-row</span>
gap-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span>={<span
class=SpellE>handleVerseSearch</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; disabled<span class=GramE>={</span>!<span
class=SpellE>selectedBook</span> |<span class=GramE>| !<span class=SpellE>selectedChapter</span></span>
|<span class=GramE>| !<span class=SpellE>selectedVerseNumber</span></span> || <span
class=SpellE>isLoading</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;px-6 py-2
bg-indigo-500 hover:bg-indigo-600 text-white font-semibold rounded-full
transition-colors duration-200 <span class=GramE>disabled:opacity</span>-50 <span
class=SpellE><span class=GramE>disabled:cursor</span>-not-allowed</span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Search Verse<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;div <span class=SpellE>className</span>=&quot;bg-gray-50
dark:bg-gray-700 p-4 <span class=GramE>sm:p</span>-6 rounded-xl border
border-gray-200 <span class=GramE>dark:border</span>-gray-700 mb-6
transition-all duration-300&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;h2 <span class=SpellE>className</span>=&quot;text-xl
font-semibold mb-4 text-indigo-700 dark:text-indigo-300&quot;&gt;Search for a
Verse by Topic&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=<span class=GramE>&quot;flex
</span>flex-<span class=GramE>col</span> <span class=SpellE><span class=GramE>sm:flex</span>-row</span>
gap-4 mb-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;input<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; type=&quot;text&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; placeholder=&quot;e.g., healing, anxiety,
strength&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; value={topic}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onChange</span><span
class=GramE>={(</span>e) =&gt; <span class=SpellE>setTopic</span>(<span
class=SpellE><span class=GramE>e.target</span>.<span class=GramE>value</span></span><span
class=GramE>)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;flex-1
px-4 py-2 rounded-<span class=GramE>full border</span> border-gray-300 <span
class=GramE>dark:border</span>-gray-600 bg-gray-100 dark:bg-gray-700
text-gray-700 dark:text-gray-200 <span class=SpellE><span class=GramE>focus:outline</span>-none</span>
<span class=GramE>focus:ring</span>-2 <span class=GramE>focus:ring</span>-indigo-500&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; /&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span>={<span
class=SpellE>handleTopicSearch</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; disabled=<span class=GramE>{!<span class=SpellE>topic</span></span><span
class=SpellE>.<span class=GramE>trim</span></span><span class=GramE>(</span>)
|| <span class=SpellE>isLoading</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;px-6 py-2
bg-indigo-500 hover:bg-indigo-600 text-white font-semibold rounded-full
transition-colors duration-200 <span class=GramE>disabled:opacity</span>-50 <span
class=SpellE><span class=GramE>disabled:cursor</span>-not-allowed</span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; Search Topic<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
justify-center&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span>={<span
class=SpellE>handleRandomVerse</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; disabled={<span class=SpellE>isLoading</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;px-6
py-2 mt-2 bg-slate-500 hover:bg-slate-600 text-white font-semibold rounded-full
transition-colors duration-200 <span class=GramE>disabled:opacity</span>-50 <span
class=SpellE><span class=GramE>disabled:cursor</span>-not-allowed</span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Get a Random Verse<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; {<span class=SpellE><span class=GramE>isLoading</span></span><span
class=GramE> ?</span> (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
justify-center items-center h-24&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;<span class=SpellE>svg</span> <span class=SpellE>className</span>=&quot;animate-spin
h-8 w-8 text-indigo-500&quot; <span class=SpellE>xmlns</span>=&quot;http://www.w3.org/2000/svg&quot;
fill=&quot;none&quot; <span class=SpellE>viewBox</span>=&quot;0 0 24
24&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;circle <span class=SpellE>className</span>=&quot;opacity-25&quot;
cx=&quot;12&quot; cy=&quot;12&quot; r=&quot;10&quot; stroke=&quot;<span
class=SpellE>currentColor</span>&quot; <span class=SpellE>strokeWidth</span>=&quot;4&quot;&gt;&lt;/circle&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;path <span class=SpellE>className</span>=&quot;opacity-75&quot;
fill=&quot;<span class=SpellE>currentColor</span>&quot; d=&quot;M4 12a8 8 0
018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135
5.824 3 7.938l3-2.647z&quot;&gt;&lt;/path&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/<span class=SpellE>svg</span>&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; ) : (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; <span class=SpellE>devotionalContent</span> &amp;&amp; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
items-center space-x-2 text-5xl mb-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;span&gt;{<span class=SpellE><span class=GramE>getEmojiForVerse</span></span><span
class=GramE>(<span class=SpellE>devotionalContent</span>?.</span>verse<span
class=GramE>)}&lt;</span>/span&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;h2 <span class=SpellE>className</span>=&quot;text-2xl
font-semibold text-indigo-700 dark:text-indigo-300&quot;&gt;{<span
class=SpellE>devotionalContent</span><span class=GramE>?.verse</span>}&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-gray-700
dark:text-gray-200 leading-relaxed text-<span class=SpellE>sm</span> <span
class=SpellE>sm:text-base</span> mb-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE><span class=GramE>devotionalContent</span></span><span
class=GramE>?.</span><span class=SpellE>verseText</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;space-y-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3 <span class=SpellE>className</span>=&quot;text-lg
font-semibold text-gray-800 dark:text-gray-200&quot;&gt;Devotional&lt;/h3&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-gray-700
dark:text-gray-300 text-<span class=SpellE>sm</span>&quot;&gt;{<span
class=SpellE><span class=GramE>devotionalContent</span></span><span
class=GramE>?.devotional}&lt;</span>/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3 <span class=SpellE>className</span>=&quot;text-lg
font-semibold text-gray-800 dark:text-gray-200&quot;&gt;Affirmation&lt;/h3&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-gray-700
dark:text-gray-300 text-<span class=SpellE>sm</span> italic&quot;<span
class=GramE>&gt;&quot;{<span class=SpellE>devotionalContent</span>?.affirmation}&quot;</span>&lt;/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3 <span class=SpellE>className</span>=&quot;text-lg
font-semibold text-gray-800 dark:text-gray-200&quot;&gt;A Prayer to
Consider&lt;/h3&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-gray-700
dark:text-gray-300 text-<span class=SpellE>sm</span>&quot;&gt;{<span
class=SpellE><span class=GramE>devotionalContent</span></span><span
class=GramE>?.prayer}&lt;</span>/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;mt-6
flex justify-center items-center gap-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span><span
class=GramE>={<span class=SpellE>audioInstance</span> ?</span> <span
class=SpellE><span class=GramE>handleTogglePlayPause</span></span><span
class=GramE> :</span> <span class=SpellE>handleReadAloud</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; disabled={<span class=SpellE>isAudioLoading</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;px-4
py-2 bg-indigo-600 hover:bg-indigo-700 text-white font-semibold rounded-full
transition-colors duration-200 <span class=GramE>disabled:opacity</span>-50 <span
class=SpellE><span class=GramE>disabled:cursor</span>-not-allowed</span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE><span class=GramE>isSpeaking</span></span><span
class=GramE> ?</span> (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;<span class=SpellE>svg</span> <span
class=SpellE>xmlns</span>=&quot;http://www.w3.org/2000/svg&quot; <span
class=SpellE>className</span>=&quot;h-5 w-5&quot; <span class=SpellE>viewBox</span>=&quot;0
0 20 20&quot; fill=&quot;<span class=SpellE>currentColor</span>&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;path <span class=SpellE>fillRule</span>=&quot;<span
class=SpellE>evenodd</span>&quot; d=&quot;M18 10a8 8 0 11-16 0 8 8 0 0116
0zm-7-4a1 1 0 112 0v8a1 1 0 11-2 0V6zm-5 1a1 1 0 011-1h2a1 1 0 110 2H6a1 1 0
01-1-1zm10 0a1 1 0 011-1h2a1 1 0 110 2h-2a1 1 0 01-1-1z&quot; <span
class=SpellE>clipRule</span>=&quot;<span class=SpellE>evenodd</span>&quot;
/&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/<span class=SpellE>svg</span>&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ) : (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;<span class=SpellE>svg</span> <span
class=SpellE>xmlns</span>=&quot;http://www.w3.org/2000/svg&quot; <span
class=SpellE>className</span>=&quot;h-5 w-5&quot; <span class=SpellE>viewBox</span>=&quot;0
0 20 20&quot; fill=&quot;<span class=SpellE>currentColor</span>&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;path <span class=SpellE>fillRule</span>=&quot;<span
class=SpellE>evenodd</span>&quot; d=&quot;M10 18a8 8 0 100-16 8 8 0 000
16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z&quot;
<span class=SpellE>clipRule</span>=&quot;<span class=SpellE>evenodd</span>&quot;
/&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/<span class=SpellE>svg</span>&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; )<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; )}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;div <span class=SpellE>className</span>=&quot;mt-4 p-2 text-<span
class=SpellE>xs</span> text-center text-gray-500 dark:text-gray-400&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; {<span class=SpellE><span class=GramE>isAudioLoading</span></span><span
class=GramE> ?</span> &quot;Generating and loading audio...<span class=GramE>&quot;
:</span> <span class=SpellE><span class=GramE>isSpeaking</span></span><span
class=GramE> ?</span> &quot;Playing audio...<span class=GramE>&quot; :</span> <span
class=SpellE>audioInstance</span> &amp;&amp; <span class=SpellE><span
class=GramE>audioInstance.paused</span></span><span class=GramE> ?</span>
&quot;Audio paused.<span class=GramE>&quot; :</span> &quot;&quot;}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;div <span class=SpellE>className</span>=&quot;border-<span class=GramE>t
border</span>-gray-200 <span class=GramE>dark:border</span>-gray-700 p-6 <span
class=GramE>sm:p</span>-8 mt-6&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;div <span class=SpellE>className</span>=&quot;mb-6&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; {<span class=SpellE><span class=GramE>devotionalContent</span></span><span
class=GramE>?.question &amp;&amp;</span> (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;p-4
rounded-xl border-l-4 border-indigo-500 bg-indigo-50 dark:bg-indigo-950 mb-4
transition-all duration-300&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-indigo-800
dark:text-indigo-200 text-<span class=SpellE>sm</span> font-medium
leading-snug&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span <span class=SpellE>className</span>=&quot;font-bold&quot;&gt;Prompt
for Journaling:&lt;/span&gt; {<span class=SpellE>devotionalContent.question</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; )}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;label <span class=SpellE>htmlFor</span>=&quot;journal&quot; <span
class=SpellE>className</span>=&quot;block text-<span class=SpellE>sm</span>
font-medium text-gray-700 dark:text-gray-300 mb-2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; Your Prayer or Reflection<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/label&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;<span class=SpellE>textarea</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; id=&quot;journal&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;w-full h-32 p-4
text-gray-700 dark:text-gray-200 bg-gray-50 dark:bg-gray-700 border
border-gray-300 <span class=GramE>dark:border</span>-gray-600 rounded-xl <span
class=SpellE><span class=GramE>focus:outline</span>-none</span> <span
class=GramE>focus:ring</span>-2 <span class=GramE>focus:ring</span>-indigo-500 <span
class=GramE>dark:focus</span>:ring-indigo-400 transition-all duration-200
resize-none&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; placeholder=&quot;Write your thoughts here...&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; value={<span class=SpellE>journalEntry</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>onChange</span><span class=GramE>={(</span>e)
=&gt; <span class=SpellE>setJournalEntry</span>(<span class=SpellE><span
class=GramE>e.target</span>.<span class=GramE>value</span></span><span
class=GramE>)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &gt;&lt;/<span class=SpellE>textarea</span>&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
justify-center&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span>={<span class=SpellE>handleSaveEntry</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;w-full <span
class=SpellE><span class=GramE>sm:w</span>-auto</span> px-8 py-3 bg-indigo-600
hover:bg-indigo-700 text-white font-semibold rounded-full shadow-lg
transition-transform transform <span class=GramE>hover:scale</span>-105 <span
class=GramE>active:scale</span>-95 duration-200&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; {<span class=SpellE><span class=GramE>selectedEntry</span></span><span
class=GramE> ?</span> 'Update Entry<span class=GramE>' :</span> 'Save <span
class=GramE>Entry'}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {/*
Saved Entries Section <span class=GramE>*/}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;div <span class=SpellE>className</span>=&quot;border-<span class=GramE>t
border</span>-gray-200 <span class=GramE>dark:border</span>-gray-700 p-6 <span
class=GramE>sm:p</span>-8 mt-6&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex justify-between
items-center mb-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;h2 <span class=SpellE>className</span>=&quot;text-2xl
font-bold text-indigo-600 dark:text-indigo-400&quot;&gt;Your Journal&lt;/h2&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;input<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; type=&quot;text&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; placeholder=&quot;Search journal...&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; value={<span class=SpellE>searchTerm</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>onChange</span><span class=GramE>={(</span>e)
=&gt; <span class=SpellE>setSearchTerm</span>(<span class=SpellE><span
class=GramE>e.target</span>.<span class=GramE>value</span></span><span
class=GramE>)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;px-4 py-2 w-1/2
rounded-full border border-gray-300 <span class=GramE>dark:border</span>-gray-600
bg-gray-50 dark:bg-gray-700 text-gray-700 dark:text-gray-200
placeholder-gray-400 <span class=SpellE><span class=GramE>focus:outline</span>-none</span>
<span class=GramE>focus:ring</span>-2 <span class=GramE>focus:ring</span>-indigo-500&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; /&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; {<span class=SpellE>filteredEntries.length</span> === <span class=GramE>0
?</span> (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-gray-500
dark:text-gray-400 text-center&quot;&gt;No matching entries <span class=GramE>found.&lt;</span>/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; ) : (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;space-y-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=GramE>{<span class=SpellE>filteredEntries.map</span>((</span>entry)
=&gt; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;div key={entry.id} <span class=SpellE>className</span>=&quot;bg-gray-50
dark:bg-gray-700 p-4 rounded-<span class=GramE>xl border</span> border-gray-200
<span class=GramE>dark:border</span>-gray-600 shadow-md&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
justify-between items-center mb-2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span <span class=SpellE>className</span>=&quot;text-<span
class=SpellE>xs</span> font-medium text-gray-500 dark:text-gray-400&quot;&gt;{<span
class=SpellE><span class=GramE>entry.date</span></span>}&lt;/span&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;flex
space-x-2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span><span
class=GramE>={</span>() =&gt; <span class=SpellE>handleEditEntry</span>(<span
class=GramE>entry)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;text-<span
class=SpellE>xs</span> text-indigo-600 dark:text-indigo-400 <span class=SpellE><span
class=GramE>hover:underline</span></span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Edit<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span><span
class=GramE>={</span>() =&gt; <span class=SpellE>handleDeleteEntry</span>(<span
class=GramE>entry.id)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;text-<span
class=SpellE>xs</span> text-red-600 dark:text-red-400 <span class=SpellE><span
class=GramE>hover:underline</span></span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Delete<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span class=SpellE>className</span>=&quot;text-<span
class=SpellE>sm</span> text-gray-700 dark:text-gray-200 leading-snug
break-words&quot;&gt;{<span class=SpellE>entry.<span class=GramE>text</span></span><span
class=GramE>}&lt;</span>/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {/* Toggle button and collapsible content <span
class=GramE>*/}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE><span class=GramE>entry.devotional</span></span>
&amp;&amp; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span class=SpellE>className</span>=&quot;mt-4&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;button<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>onClick</span><span
class=GramE>={</span>() =&gt; <span class=SpellE>handleToggleExpand</span>(<span
class=GramE>entry.id)}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>className</span>=&quot;text-<span
class=SpellE>xs</span> font-semibold text-indigo-600 dark:text-indigo-400 <span
class=SpellE><span class=GramE>hover:underline</span></span> <span
class=SpellE><span class=GramE>focus:outline</span>-none</span>&quot;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE>expandedEntryId</span>
=== <span class=GramE>entry.id ?</span> 'Hide Devotional<span class=GramE>' :</span>
'Show <span class=GramE>Devotional'}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/button&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {<span class=SpellE>expandedEntryId</span>
=== entry.id &amp;&amp; (<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span
class=SpellE>className</span>=&quot;mt-2 p-3 bg-gray-100 dark:bg-gray-600
rounded-lg&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;div <span
class=SpellE>className</span>=&quot;flex items-center space-x-2 text-2xl
mb-2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;span&gt;{<span class=SpellE>getEmojiForVerse</span>(<span class=SpellE><span
class=GramE>entry.devotional</span>.verse</span><span class=GramE>)}&lt;</span>/span&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;h3 <span
class=SpellE>className</span>=&quot;text-<span class=SpellE>sm</span> font-bold
text-gray-800 dark:text-gray-100&quot;&gt;{<span class=SpellE><span
class=GramE>entry.devotional</span>.<span class=GramE>verse</span></span><span
class=GramE>}&lt;</span>/h3&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span
class=SpellE>className</span>=&quot;text-<span class=SpellE>xs</span>
text-gray-700 dark:text-gray-200 leading-snug mt-1&quot;&gt;{<span
class=SpellE><span class=GramE>entry.devotional</span>.<span class=GramE>verseText</span></span><span
class=GramE>}&lt;</span>/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span
class=SpellE>className</span>=&quot;text-<span class=SpellE>xs</span>
text-gray-700 dark:text-gray-200 leading-snug mt-2&quot;&gt;{<span
class=SpellE><span class=GramE>entry.devotional</span>.<span class=GramE>devotional</span></span><span
class=GramE>}&lt;</span>/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span
class=SpellE>className</span>=&quot;text-<span class=SpellE>xs</span>
text-gray-700 dark:text-gray-200 leading-snug mt-2 italic&quot;<span
class=GramE>&gt;&quot;{<span class=SpellE>entry.devotional</span></span><span
class=SpellE>.<span class=GramE>affirmation</span></span><span class=GramE>}&quot;</span>&lt;/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;p <span
class=SpellE>className</span>=&quot;text-<span class=SpellE>xs</span>
text-gray-800 dark:text-gray-100 font-medium leading-snug mt-2&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;span <span
class=SpellE>className</span>=&quot;font-bold&quot;&gt;Prompt:&lt;/span&gt; {<span
class=SpellE><span class=GramE>entry.devotional</span>.question</span>}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/p&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &nbsp; <span class=GramE>))}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp; )}<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&nbsp;&lt;div <span class=SpellE>className</span>=&quot;mt-4 p-2 text-<span
class=SpellE>xs</span> text-gray-500 dark:text-gray-400 text-center&quot;&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; User
<span class=GramE>ID: {<span class=SpellE>userId</span> ?</span> <span
class=SpellE><span class=GramE>userId</span></span><span class=GramE> :</span>
'Loading<span class=GramE>...'}</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
&lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &lt;/div&gt;<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; );<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; };<o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &nbsp; &nbsp; <span class=SpellE>ReactDOM.render</span>(&lt;App
/&gt;, <span class=SpellE><span class=GramE>document.getElementById</span></span>('root')<span
class=GramE>);</span><o:p></o:p></p>

<p class=MsoNormal>&nbsp; &nbsp; &lt;/script&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;/body&gt;<o:p></o:p></p>

<p class=MsoNormal>&lt;/html&gt;<o:p></o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

<p class=MsoNormal><o:p>&nbsp;</o:p></p>

</div>

</body>

</html>
